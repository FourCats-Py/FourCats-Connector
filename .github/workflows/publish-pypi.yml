# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package To Pypi

on:
  release:
    types:
      - created

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Pack
        id: pack
        run: |
          cd ..
          baseName=$(basename "${{ github.ref }}")
          tarName="FourCats-Connector-1-$baseName.tar.gz"
          zipName="FourCats-Connector-1-$baseName.zip"
          tar -zcvf $tarName ./FourCats-Connector
          zip -r -q $zipName ./FourCats-Connector
          echo ::set-output name=tarName::$tarName name=zipName::$zipName

      - name: Upload Tar
        uses: JasonEtco/upload-to-release@master
        run: |
          echo $tarName
          echo ${{ steps.pack.outputs.tarName }}
        with:
          args: ${{ steps.pack.outputs.tarName }} application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Zip
        uses: JasonEtco/upload-to-release@master
        with:
          args: echo ${{ steps.pack.outputs.zipName }} application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  deploy:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Check Tag
        id: check-tag
        run: |
          if [[ ${{ github.ref }} =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo ::set-output name=state::true
          fi

      - name: Change Version
        run: |
          baseName=$(basename "${{ github.ref }}")

          if [[ "$baseName" =~ "beta" ]]; then
            version=$(echo "$baseName" | grep -E "^v[0-9]+.[0-9]+.[0-9]+-beta.[0-9]+$")
          else
            version=$(echo "$baseName" | grep -E "^v[0-9]+.[0-9]+.[0-9]+$")
          fi

          if [[ "$version" == "" ]]; then
            echo "No version number matched."
            exit 1
          fi

          version=${version:1}

          echo "$version"

          echo "Get version $version"

          sed -i -r "s/^__version__[[:space:]]+=[[:space:]]+[\'\"](.*)[\'\"]$/__version__ = \"$version\"/" fourcats_connector/__init__.py

          cat fourcats_connector/__init__.py

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Build package
        run: |
          python setup.py sdist bdist_wheel

      - name: Publish package To Pypi
        if: steps.check-tag.outputs.state == 'true'
        run: |
          echo Publish package To Pypi
#        uses: pypa/gh-action-pypi-publish@master
#        with:
#          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Publish package Test Pypi
        run: |
          echo Publish package Test Pypi
#        uses: pypa/gh-action-pypi-publish@master
#        with:
#          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
#          repository_url: https://test.pypi.org/legacy/
